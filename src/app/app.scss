// http://ionicframework.com/docs/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
.active {
  background-color: $lightGrey;
  bip-menu-item-icon {
    @include smoothShadow;
  }
}

.toolbar {
  &[class*="toolbar-"] {
    & button {
      color: bipColor('boreal');
    }
  }
}

.fab {
  bip-icon {
    font-size: 24px;
  }
}

.fab-wp {
  bip-icon {
    svg {
      top: 0.05em;
    }
  }
}

.fab[mini] {
  bip-icon {
    font-size: 18px;
  }
}

ion-menu {
  .close-menu-button {
    z-index: 2;
    position: absolute;
    right: 0;
    font-size: 18px;
    background-color: transparent;
    color: bipColor('dark');
    box-shadow: none;
    &.activated {
      background-color: rgba(0, 0, 0, .05);
      box-shadow: none;
    }
  }
  [ion-fixed] {
    width: 100%;
  }
  .scroll-content {
    top: 278px;
  }
}

.menu-item-list {
  font-size: 16px;
  bip-menu-item {
    border-bottom: 1px solid $lightGrey;
  }
  bip-menu-item:last-child {
    border-bottom: none;
  }
}

.multiline-fade {
  &::after {
    content: '';
    height: 1.2em;
    width: 100%;
    background: linear-gradient(90deg, transparentize(bipColor('light'), 1) 0%, bipColor('light') 90%);
    position: absolute;
    bottom: 0;
    right: 0;
  }
}

ion-app.md .multiline-fade,
ion-app.ios .multiline-fade {
  $textHeight: 1.2em;
  line-height: $textHeight;
  height: calc(3 * #{$textHeight});
}

ion-app.wp .multiline-fade {
  $textHeight: 1.35em;
  line-height: $textHeight;
  height: calc(3 * #{$textHeight});
}

.img-wrapper {
  margin-left: -#{$globalSpacing};
  margin-right: -#{$globalSpacing};
  overflow: hidden;
  &.cover {
    margin-top: -#{$globalSpacing};
    margin-bottom: $globalSpacing;
  }
  img {
    object-fit: cover;
    width: 100%;
  }
}

.title-bar {
  display: flex;
  justify-content: space-between;
  padding-bottom: $globalSpacing;
  border-bottom: 0.5px solid rgba(177, 177, 177, 0.5);
  margin-bottom: $globalSpacing;
}

@media only screen and (orientation: portrait) {
  .img-wrapper.cover {
    height: 40vw;
  }
}

@media only screen and (orientation: landscape) {
  .img-wrapper.cover {
    height: 40vh;
  }
}